{"ast":null,"code":"var _jsxFileName = \"/Users/cheng0913/Desktop/Top5Lists/Top5Lists_FInal/client/src/components/Top5Item.js\",\n    _s = $RefreshSig$();\n\nimport { React, useContext, useState } from \"react\";\nimport { GlobalStoreContext } from '../store';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { AuthContext } from '../auth';\n/*\n    This React component represents a single item in our\n    Top 5 List, which can be edited or moved around.\n    \n    @author McKilla Gorilla\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Top5Item(props) {\n  _s();\n\n  const {\n    store\n  } = useContext(GlobalStoreContext);\n  const {\n    auth\n  } = useContext(AuthContext);\n  const [editActive, setEditActive] = useState(false);\n  const [text, setText] = useState(\"\");\n\n  function handleToggleEdit(event) {\n    //console.log(auth.user.email)\n    //console.log(store.currentList.ownerEmail)\n    if (auth.user.email !== store.currentList.ownerEmail) {\n      return;\n    }\n\n    event.stopPropagation();\n    toggleEdit();\n  }\n\n  function toggleEdit() {\n    let newActive = !editActive;\n\n    if (newActive) {\n      store.setIsItemEditActive();\n    }\n\n    setEditActive(newActive);\n  }\n\n  function handleKeyPress(event) {\n    if (event.code === \"Enter\") {\n      let index = event.target.id.substring(\"list-\".length);\n      let text = event.target.value;\n      store.addUpdateItemTransaction(index - 1, text);\n      toggleEdit();\n    }\n  }\n\n  function handleUpdateText(event) {\n    setText(event.target.value);\n  }\n\n  let {\n    index\n  } = props;\n  let itemClass = \"top5-item\";\n\n  let itemElement = /*#__PURE__*/_jsxDEV(ListItem, {\n    id: 'item-' + (index + 1),\n    className: itemClass,\n    sx: {\n      display: 'flex',\n      p: 1,\n      backgroundColor: \"#d3b036\",\n      borderRadius: \"10px\",\n      marginTop: '10px',\n      cursor: \"pointer\"\n    },\n    style: {\n      fontSize: '38pt',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 1,\n        flexGrow: 1\n      },\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)\n  }, props.key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 13\n  }, this);\n\n  if (editActive) {\n    itemElement = /*#__PURE__*/_jsxDEV(TextField, {\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      id: \"item-\" + (index + 1),\n      label: \"Top 5 Item Name\",\n      name: \"name\",\n      autoComplete: \"Top 5 Item Name\",\n      className: \"top5-item\",\n      onKeyPress: handleKeyPress,\n      onChange: handleUpdateText,\n      defaultValue: props.text,\n      inputProps: {\n        style: {\n          fontSize: 48\n        }\n      },\n      InputLabelProps: {\n        style: {\n          fontSize: 24\n        }\n      },\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }, this);\n  }\n\n  return itemElement;\n}\n\n_s(Top5Item, \"OxiUnWYjBGYXH9hxges30HH7I5U=\");\n\n_c = Top5Item;\nexport default Top5Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Top5Item\");","map":{"version":3,"sources":["/Users/cheng0913/Desktop/Top5Lists/Top5Lists_FInal/client/src/components/Top5Item.js"],"names":["React","useContext","useState","GlobalStoreContext","TextField","Box","ListItem","IconButton","EditIcon","AuthContext","Top5Item","props","store","auth","editActive","setEditActive","text","setText","handleToggleEdit","event","user","email","currentList","ownerEmail","stopPropagation","toggleEdit","newActive","setIsItemEditActive","handleKeyPress","code","index","target","id","substring","length","value","addUpdateItemTransaction","handleUpdateText","itemClass","itemElement","display","p","backgroundColor","borderRadius","marginTop","cursor","fontSize","width","flexGrow","key","style"],"mappings":"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","sourcesContent":["import { React, useContext, useState } from \"react\";\nimport { GlobalStoreContext } from '../store'\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport ListItem from '@mui/material/ListItem';\nimport IconButton from '@mui/material/IconButton';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { AuthContext } from '../auth';\n/*\n    This React component represents a single item in our\n    Top 5 List, which can be edited or moved around.\n    \n    @author McKilla Gorilla\n*/\nfunction Top5Item(props) {\n    const { store } = useContext(GlobalStoreContext);\n    const { auth } = useContext(AuthContext);\n    const [editActive, setEditActive] = useState(false);\n    const [text, setText] = useState(\"\");\n\n    function handleToggleEdit(event) {\n        //console.log(auth.user.email)\n        //console.log(store.currentList.ownerEmail)\n        if (auth.user.email !== store.currentList.ownerEmail) {\n            return\n        }\n        event.stopPropagation();\n        toggleEdit();\n    }\n\n    function toggleEdit() {\n        let newActive = !editActive;\n        if (newActive) {\n            store.setIsItemEditActive();\n        }\n        setEditActive(newActive);\n    }\n\n    function handleKeyPress(event) {\n        if (event.code === \"Enter\") {\n            let index = event.target.id.substring(\"list-\".length);\n            let text = event.target.value;\n            store.addUpdateItemTransaction(index-1, text);\n            toggleEdit();\n        }\n    }\n    function handleUpdateText(event) {\n        setText(event.target.value);\n    }\n    \n\n    let { index } = props;\n\n    let itemClass = \"top5-item\";\n\n    let itemElement =\n            <ListItem\n                id={'item-' + (index+1)}\n                key={props.key}\n                className={itemClass}\n                sx={{ display: 'flex', p: 1, backgroundColor: \"#d3b036\", borderRadius: \"10px\", marginTop: '10px', cursor: \"pointer\" }}\n                style={{\n                    fontSize: '38pt',\n                    width: '100%'\n                }}\n            >\n                <Box sx={{ p: 1, flexGrow: 1 }}>{props.text}</Box>\n            </ListItem>\n            if (editActive) {\n                itemElement =\n                    <TextField\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id={\"item-\" + (index+1)}\n                        label=\"Top 5 Item Name\"\n                        name=\"name\"\n                        autoComplete=\"Top 5 Item Name\"\n                        className='top5-item'\n                        onKeyPress={handleKeyPress}\n                        onChange={handleUpdateText}\n                        defaultValue={props.text}\n                        inputProps={{style: {fontSize: 48}}}\n                        InputLabelProps={{style: {fontSize: 24}}}\n                        autoFocus\n                    />\n            }\n    return  (\n        itemElement\n    );\n}\n\nexport default Top5Item;"]},"metadata":{},"sourceType":"module"}