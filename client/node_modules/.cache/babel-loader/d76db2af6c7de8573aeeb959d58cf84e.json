{"ast":null,"code":"var _jsxFileName = \"/Users/cheng0913/Desktop/Top5Lists_HW4/Top5Lists_HW4/client/src/auth/index.js\",\n    _s = $RefreshSig$();\n\nimport { getNativeSelectUtilityClasses } from \"@mui/material\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nconsole.log(\"create AuthContext: \" + AuthContext); // THESE ARE ALL THE TYPES OF UPDATES TO OUR AUTH STATE THAT CAN BE PROCESSED\n\nexport const AuthActionType = {\n  GET_LOGGED_IN: \"GET_LOGGED_IN\",\n  REGISTER_USER: \"REGISTER_USER\",\n  LOGIN_USER: \"LOGIN_USER\",\n  ERROR: \"ERROR\",\n  MODAL_CLOSE: \"MODAL_CLOSE\",\n  LOGOUT_USER: \"LOGOUT_USER\"\n};\n\nfunction AuthContextProvider(props) {\n  _s();\n\n  const [auth, setAuth] = useState({\n    user: null,\n    loggedIn: false,\n    error: false,\n    errorMessage: null\n  });\n  const history = useHistory();\n  useEffect(() => {\n    auth.getLoggedIn();\n  }, []);\n\n  const authReducer = action => {\n    const {\n      type,\n      payload\n    } = action;\n\n    switch (type) {\n      case AuthActionType.GET_LOGGED_IN:\n        {\n          return setAuth({\n            user: payload.user,\n            loggedIn: payload.loggedIn,\n            error: false,\n            errorMessage: null\n          });\n        }\n\n      case AuthActionType.LOGIN_USER:\n        {\n          return setAuth({\n            user: payload.user,\n            loggedIn: true,\n            error: false,\n            errorMessage: null\n          });\n        }\n\n      case AuthActionType.ERROR:\n        {\n          return setAuth({\n            user: payload.user,\n            loggedIn: false,\n            error: true,\n            errorMessage: payload.errorMessage\n          });\n        }\n\n      case AuthActionType.LOGIN_USER:\n        {\n          return setAuth({\n            user: null,\n            loggedIn: payload.loggedIn,\n            error: false,\n            errorMessage: null\n          });\n        }\n\n      case AuthActionType.MODAL_CLOSE:\n        {\n          return setAuth({\n            user: payload.user,\n            loggedIn: payload.user,\n            error: false,\n            errorMessage: null\n          });\n        }\n\n      case AuthActionType.REGISTER_USER:\n        {\n          return setAuth({\n            user: payload.user,\n            loggedIn: true,\n            error: false,\n            errorMessage: null\n          });\n        }\n\n      default:\n        return auth;\n    }\n  };\n\n  auth.loginUser = async function (userdata, store) {\n    const response = await api.loginUser(userdata).catch(error => {\n      authReducer({\n        type: AuthActionType.ERROR,\n        payload: {\n          user: null,\n          errorMessage: error.response.data.errorMessage\n        }\n      });\n    });\n\n    if (response && response.status === 200) {\n      authReducer({\n        type: AuthActionType.LOGIN_USER,\n        payload: {\n          user: response.data.user\n        }\n      });\n      history.push(\"/\");\n      store.loadIdNamePairs();\n    }\n  };\n\n  auth.getLoggedIn = async function () {\n    const response = await api.getLoggedIn();\n\n    if (response.status === 200) {\n      authReducer({\n        type: AuthActionType.SET_LOGGED_IN,\n        payload: {\n          loggedIn: response.data.loggedIn,\n          user: response.data.user\n        }\n      }); //history.push(\"/\");\n      //store.loadIdNamePairs();\n    }\n  };\n\n  auth.logoutUser = async function () {\n    authReducer({\n      type: AuthActionType.LOGOUT_USER,\n      payload: {\n        loggedIn: false\n      }\n    });\n    history.push(\"/\");\n  };\n\n  auth.registerUser = async function (userData, store) {\n    const response = await api.registerUser(userData).catch(error => {\n      authReducer({\n        type: AuthActionType.ERROR,\n        payload: {\n          user: null,\n          errorMessage: error.response.data.errorMessage\n        }\n      });\n    });\n\n    if (response && response.status === 200) {\n      authReducer({\n        type: AuthActionType.REGISTER_USER,\n        payload: {\n          user: response.data.user\n        }\n      });\n      history.push(\"/\");\n      store.loadIdNamePairs();\n    }\n  };\n\n  auth.closeModal = async function () {\n    authReducer({\n      type: AuthActionType.MODAL_CLOSE,\n      payload: {\n        user: null,\n        loggedIn: false\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      auth\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthContextProvider, \"3Z9YQIoXsXYS1G3kZLL4NBF+leE=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthContextProvider;\nexport default AuthContext;\nexport { AuthContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/cheng0913/Desktop/Top5Lists_HW4/Top5Lists_HW4/client/src/auth/index.js"],"names":["getNativeSelectUtilityClasses","React","createContext","useEffect","useState","useHistory","api","AuthContext","console","log","AuthActionType","GET_LOGGED_IN","REGISTER_USER","LOGIN_USER","ERROR","MODAL_CLOSE","LOGOUT_USER","AuthContextProvider","props","auth","setAuth","user","loggedIn","error","errorMessage","history","getLoggedIn","authReducer","action","type","payload","loginUser","userdata","store","response","catch","data","status","push","loadIdNamePairs","SET_LOGGED_IN","logoutUser","registerUser","userData","closeModal","children"],"mappings":"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","sourcesContent":["import { getNativeSelectUtilityClasses } from \"@mui/material\";\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom'\nimport api from '../api'\n\nexport const AuthContext = createContext();\nconsole.log(\"create AuthContext: \" + AuthContext);\n\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR AUTH STATE THAT CAN BE PROCESSED\nexport const AuthActionType = {\n    GET_LOGGED_IN: \"GET_LOGGED_IN\",\n    REGISTER_USER: \"REGISTER_USER\",\n    LOGIN_USER: \"LOGIN_USER\",\n    ERROR: \"ERROR\",\n    MODAL_CLOSE: \"MODAL_CLOSE\",\n    LOGOUT_USER: \"LOGOUT_USER\",\n}\n\nfunction AuthContextProvider(props) {\n    const [auth, setAuth] = useState({\n        user: null,\n        loggedIn: false,\n        error: false,\n        errorMessage: null,\n    });\n    const history = useHistory();\n\n    useEffect(() => {\n        auth.getLoggedIn();\n    }, []);\n\n    const authReducer = (action) => {\n        const { type, payload } = action;\n        switch (type) {\n            case AuthActionType.GET_LOGGED_IN: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: payload.loggedIn,\n                    error: false,\n                    errorMessage: null\n                });\n            }\n            case AuthActionType.LOGIN_USER: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: true,\n                    error: false,\n                    errorMessage: null\n                })\n            }\n            case AuthActionType.ERROR: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: false,\n                    error: true,\n                    errorMessage: payload.errorMessage\n                })\n            }\n            case AuthActionType.LOGIN_USER: {\n                return setAuth({\n                    user: null,\n                    loggedIn: payload.loggedIn,\n                    error: false,\n                    errorMessage: null\n                })\n            }\n            case AuthActionType.MODAL_CLOSE: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: payload.user,\n                    error: false,\n                    errorMessage: null\n                })\n            }\n            case AuthActionType.REGISTER_USER: {\n                return setAuth({\n                    user: payload.user,\n                    loggedIn: true,\n                    error: false,\n                    errorMessage: null\n                })\n            }\n            default:\n                return auth;\n        }\n    }\n    auth.loginUser = async function (userdata, store) {\n        const response = await api.loginUser(userdata).catch((error) => {\n            authReducer({\n                type: AuthActionType.ERROR,\n                payload: {\n                    user: null,\n                    errorMessage: error.response.data.errorMessage\n                }\n            });\n        });\n        if (response && response.status === 200) {\n            authReducer({\n                type: AuthActionType.LOGIN_USER,\n                payload: {\n                    user: response.data.user\n                }\n            });\n            history.push(\"/\")\n            store.loadIdNamePairs();\n        }\n\n    }\n\n    auth.getLoggedIn = async function () {\n        const response = await api.getLoggedIn();\n        if (response.status === 200) {\n            authReducer({\n                type: AuthActionType.SET_LOGGED_IN,\n                payload: {\n                    loggedIn: response.data.loggedIn,\n                    user: response.data.user\n                }\n            });\n            //history.push(\"/\");\n            //store.loadIdNamePairs();\n        }\n    }\n    auth.logoutUser = async function() {\n        authReducer({\n            type: AuthActionType.LOGOUT_USER,\n            payload: {\n                loggedIn: false\n            }\n        })\n        history.push(\"/\");\n    }\n    auth.registerUser = async function(userData, store) {\n        const response = await api.registerUser(userData).catch((error) => {\n            authReducer({\n                type: AuthActionType.ERROR,\n                payload: {\n                    user: null,\n                    errorMessage: error.response.data.errorMessage\n                }\n            });\n        });      \n        if (response && response.status === 200) {\n            authReducer({\n                type: AuthActionType.REGISTER_USER,\n                payload: {\n                    user: response.data.user\n                }\n            })\n            history.push(\"/\");\n            store.loadIdNamePairs();\n        } \n    }\n    auth.closeModal = async function() {\n        authReducer({\n            type: AuthActionType.MODAL_CLOSE,\n            payload: {\n                user: null,\n                loggedIn: false\n            }\n        })\n    }\n\n    return (\n        <AuthContext.Provider value={{\n            auth\n        }}>\n            {props.children}\n        </AuthContext.Provider>\n    );\n}\n\nexport default AuthContext;\nexport { AuthContextProvider };"]},"metadata":{},"sourceType":"module"}